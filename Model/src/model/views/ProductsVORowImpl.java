package model.views;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Feb 27 06:35:23 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProductsVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ProductId {
            public Object get(ProductsVORowImpl obj) {
                return obj.getProductId();
            }

            public void put(ProductsVORowImpl obj, Object value) {
                obj.setProductId((Number)value);
            }
        }
        ,
        PrdtName {
            public Object get(ProductsVORowImpl obj) {
                return obj.getPrdtName();
            }

            public void put(ProductsVORowImpl obj, Object value) {
                obj.setPrdtName((String)value);
            }
        }
        ,
        CatId {
            public Object get(ProductsVORowImpl obj) {
                return obj.getCatId();
            }

            public void put(ProductsVORowImpl obj, Object value) {
                obj.setCatId((Number)value);
            }
        }
        ,
        SuplrId {
            public Object get(ProductsVORowImpl obj) {
                return obj.getSuplrId();
            }

            public void put(ProductsVORowImpl obj, Object value) {
                obj.setSuplrId((Number)value);
            }
        }
        ,
        PurchDate {
            public Object get(ProductsVORowImpl obj) {
                return obj.getPurchDate();
            }

            public void put(ProductsVORowImpl obj, Object value) {
                obj.setPurchDate((Date)value);
            }
        }
        ,
        ExpDate {
            public Object get(ProductsVORowImpl obj) {
                return obj.getExpDate();
            }

            public void put(ProductsVORowImpl obj, Object value) {
                obj.setExpDate((Date)value);
            }
        }
        ,
        CostPs {
            public Object get(ProductsVORowImpl obj) {
                return obj.getCostPs();
            }

            public void put(ProductsVORowImpl obj, Object value) {
                obj.setCostPs((Number)value);
            }
        }
        ,
        SellngPs {
            public Object get(ProductsVORowImpl obj) {
                return obj.getSellngPs();
            }

            public void put(ProductsVORowImpl obj, Object value) {
                obj.setSellngPs((Number)value);
            }
        }
        ,
        Qunty {
            public Object get(ProductsVORowImpl obj) {
                return obj.getQunty();
            }

            public void put(ProductsVORowImpl obj, Object value) {
                obj.setQunty((Number)value);
            }
        }
        ,
        Units {
            public Object get(ProductsVORowImpl obj) {
                return obj.getUnits();
            }

            public void put(ProductsVORowImpl obj, Object value) {
                obj.setUnits((String)value);
            }
        }
        ,
        AddMore {
            public Object get(ProductsVORowImpl obj) {
                return obj.getAddMore();
            }

            public void put(ProductsVORowImpl obj, Object value) {
                obj.setAddMore((Number)value);
            }
        }
        ,
        PrdtRcptVO {
            public Object get(ProductsVORowImpl obj) {
                return obj.getPrdtRcptVO();
            }

            public void put(ProductsVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CustPrdtVO {
            public Object get(ProductsVORowImpl obj) {
                return obj.getCustPrdtVO();
            }

            public void put(ProductsVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProductCatogiryVO1 {
            public Object get(ProductsVORowImpl obj) {
                return obj.getProductCatogiryVO1();
            }

            public void put(ProductsVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SupplierVO1 {
            public Object get(ProductsVORowImpl obj) {
                return obj.getSupplierVO1();
            }

            public void put(ProductsVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UnitsVO1 {
            public Object get(ProductsVORowImpl obj) {
                return obj.getUnitsVO1();
            }

            public void put(ProductsVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ProductsVORowImpl object);

        public abstract void put(ProductsVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int PRODUCTID = AttributesEnum.ProductId.index();
    public static final int PRDTNAME = AttributesEnum.PrdtName.index();
    public static final int CATID = AttributesEnum.CatId.index();
    public static final int SUPLRID = AttributesEnum.SuplrId.index();
    public static final int PURCHDATE = AttributesEnum.PurchDate.index();
    public static final int EXPDATE = AttributesEnum.ExpDate.index();
    public static final int COSTPS = AttributesEnum.CostPs.index();
    public static final int SELLNGPS = AttributesEnum.SellngPs.index();
    public static final int QUNTY = AttributesEnum.Qunty.index();
    public static final int UNITS = AttributesEnum.Units.index();
    public static final int ADDMORE = AttributesEnum.AddMore.index();
    public static final int PRDTRCPTVO = AttributesEnum.PrdtRcptVO.index();
    public static final int CUSTPRDTVO = AttributesEnum.CustPrdtVO.index();
    public static final int PRODUCTCATOGIRYVO1 = AttributesEnum.ProductCatogiryVO1.index();
    public static final int SUPPLIERVO1 = AttributesEnum.SupplierVO1.index();
    public static final int UNITSVO1 = AttributesEnum.UnitsVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ProductsVORowImpl() {
    }

    /**
     * Gets ProductsEO entity object.
     * @return the ProductsEO
     */
    public EntityImpl getProductsEO() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for PRODUCT_ID using the alias name ProductId.
     * @return the PRODUCT_ID
     */
    public Number getProductId() {
        return (Number) getAttributeInternal(PRODUCTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PRODUCT_ID using the alias name ProductId.
     * @param value value to set the PRODUCT_ID
     */
    public void setProductId(Number value) {
        setAttributeInternal(PRODUCTID, value);
    }

    /**
     * Gets the attribute value for PRDT_NAME using the alias name PrdtName.
     * @return the PRDT_NAME
     */
    public String getPrdtName() {
        return (String) getAttributeInternal(PRDTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for PRDT_NAME using the alias name PrdtName.
     * @param value value to set the PRDT_NAME
     */
    public void setPrdtName(String value) {
        setAttributeInternal(PRDTNAME, value);
    }

    /**
     * Gets the attribute value for CAT_ID using the alias name CatId.
     * @return the CAT_ID
     */
    public Number getCatId() {
        return (Number) getAttributeInternal(CATID);
    }

    /**
     * Sets <code>value</code> as attribute value for CAT_ID using the alias name CatId.
     * @param value value to set the CAT_ID
     */
    public void setCatId(Number value) {
        setAttributeInternal(CATID, value);
    }

    /**
     * Gets the attribute value for SUPLR_ID using the alias name SuplrId.
     * @return the SUPLR_ID
     */
    public Number getSuplrId() {
        return (Number) getAttributeInternal(SUPLRID);
    }

    /**
     * Sets <code>value</code> as attribute value for SUPLR_ID using the alias name SuplrId.
     * @param value value to set the SUPLR_ID
     */
    public void setSuplrId(Number value) {
        setAttributeInternal(SUPLRID, value);
    }

    /**
     * Gets the attribute value for PURCH_DATE using the alias name PurchDate.
     * @return the PURCH_DATE
     */
    public Date getPurchDate() {
        return (Date) getAttributeInternal(PURCHDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for PURCH_DATE using the alias name PurchDate.
     * @param value value to set the PURCH_DATE
     */
    public void setPurchDate(Date value) {
        setAttributeInternal(PURCHDATE, value);
    }

    /**
     * Gets the attribute value for EXP_DATE using the alias name ExpDate.
     * @return the EXP_DATE
     */
    public Date getExpDate() {
        return (Date) getAttributeInternal(EXPDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for EXP_DATE using the alias name ExpDate.
     * @param value value to set the EXP_DATE
     */
    public void setExpDate(Date value) {
        setAttributeInternal(EXPDATE, value);
    }

    /**
     * Gets the attribute value for COST_PS using the alias name CostPs.
     * @return the COST_PS
     */
    public Number getCostPs() {
        return (Number) getAttributeInternal(COSTPS);
    }

    /**
     * Sets <code>value</code> as attribute value for COST_PS using the alias name CostPs.
     * @param value value to set the COST_PS
     */
    public void setCostPs(Number value) {
        setAttributeInternal(COSTPS, value);
    }

    /**
     * Gets the attribute value for SELLNG_PS using the alias name SellngPs.
     * @return the SELLNG_PS
     */
    public Number getSellngPs() {
        return (Number) getAttributeInternal(SELLNGPS);
    }

    /**
     * Sets <code>value</code> as attribute value for SELLNG_PS using the alias name SellngPs.
     * @param value value to set the SELLNG_PS
     */
    public void setSellngPs(Number value) {
        setAttributeInternal(SELLNGPS, value);
    }

    /**
     * Gets the attribute value for QUNTY using the alias name Qunty.
     * @return the QUNTY
     */
    public Number getQunty() {
        return (Number) getAttributeInternal(QUNTY);
    }

    /**
     * Sets <code>value</code> as attribute value for QUNTY using the alias name Qunty.
     * @param value value to set the QUNTY
     */
    public void setQunty(Number value) {
        setAttributeInternal(QUNTY, value);
    }

    /**
     * Gets the attribute value for UNITS using the alias name Units.
     * @return the UNITS
     */
    public String getUnits() {
        return (String) getAttributeInternal(UNITS);
    }

    /**
     * Sets <code>value</code> as attribute value for UNITS using the alias name Units.
     * @param value value to set the UNITS
     */
    public void setUnits(String value) {
        setAttributeInternal(UNITS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AddMore.
     * @return the AddMore
     */
    public Number getAddMore() {
        return (Number) getAttributeInternal(ADDMORE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AddMore.
     * @param value value to set the  AddMore
     */
    public void setAddMore(Number value) {
        setAttributeInternal(ADDMORE, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link PrdtRcptVO.
     */
    public RowIterator getPrdtRcptVO() {
        return (RowIterator)getAttributeInternal(PRDTRCPTVO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link CustPrdtVO.
     */
    public RowIterator getCustPrdtVO() {
        return (RowIterator)getAttributeInternal(CUSTPRDTVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ProductCatogiryVO1.
     */
    public RowSet getProductCatogiryVO1() {
        return (RowSet)getAttributeInternal(PRODUCTCATOGIRYVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SupplierVO1.
     */
    public RowSet getSupplierVO1() {
        return (RowSet)getAttributeInternal(SUPPLIERVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> UnitsVO1.
     */
    public RowSet getUnitsVO1() {
        return (RowSet)getAttributeInternal(UNITSVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    
    
  
}
